{"version":3,"sources":["components/Navigation.js","components/LayoutComponents/TopProfile.js","state.js","components/LayoutComponents/LayoutHeader.js","components/LayoutComponents/MobileMenu.js","components/LocalSearching.js","routes/MapView.js","routes/Contents.js","components/HomeCarousel.js","components/ListCard.js","routes/Home.js","routes/LoginPage.js","components/ScrollToTop.js","components/Message.js","routes/MessagesRoom.js","components/MessagesList.js","routes/Messages.js","routes/WritePost.js","components/Map.js","routes/UserProfile.js","routes/Post.js","routes/Myprofile.js","routes/Category.js","routes/SearchPost.js","routes/UpdataPost.js","components/Router.js","components/LayoutComponents/LayoutFooter.js","components/LayoutComponents/Layout.js","App.js","index.js"],"names":["SubMenu","Menu","menu","ItemGroup","title","Item","to","Navigation","overlay","trigger","className","onClick","e","preventDefault","MenuOutlined","style","fontSize","TopProfile","email","useState","profile","setProfile","getProfileImg","a","axios","get","then","res","data","Divider","href","useEffect","placement","arrow","shape","icon","UserOutlined","src","picture","layoutState","atom","key","default","LayoutHeader","Header","AntLayout","useRecoilState","layoutVisible","size","SearchOutlined","PlusSquareOutlined","count","MessageOutlined","LoginOutlined","MobileMenu","activeStyle","color","exact","HomeOutlined","LocalSeraching","saveKeywordAddress","query","setQuery","loading","setLoading","addressObject","setAddressObject","getKeyword","Swal","fire","input","text","inputPlaceholder","confirmButtonText","showCancelButton","cancelButtonText","result","isConfirmed","value","getData","method","url","headers","Authorization","params","page","documents","itemLayout","dataSource","renderItem","item","Meta","place_name","description","address_name","cursor","MapView","history","setLocations","positions","setPositions","tempArray","i","length","latlng","kakao","maps","LatLng","locationY","locationX","content","idx","id","concat","window","options","center","level","container","useRef","console","log","map","Map","current","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","setCenter","forEach","imageSize","Size","markerImage","MarkerImage","marker","Marker","image","document","createElement","link","appendChild","goPost","createTextNode","onclick","push","CustomOverlay","getPosition","kakaoMap","width","height","zIndex","ref","Contents","localStorage","getItem","moment","format","contentStyle","lineHeight","textAlign","background","imgFit","objectFit","setCarousel","HomeCarousel","autoplay","list","alt","ListCard","getApi","keyword","setData","hasMore","setPage","Card","thumbnailSwitch","event","setThumbnail","축구","조깅","야구","야구야구","기타","hasOwnProperty","moreData","paddingTop","dataLength","next","endMessage","gutter","xs","sm","md","hoverable","cover","recruiting","actions","needPeopleNum","CalendarOutlined","eventTime","FieldTimeOutlined","avatar","userPicture","writer","region1Depth","region2Depth","placeName","Home","fontWeight","marginBottom","LoginPage","ScrollToTop","pathname","useLocation","scrollTo","Message","index","user","message","isMessageRowOwn","name","MessagesRoom","visible","closeMessagesModal","TextArea","Input","setItem","scrollRef","datas","slice","scrollIntoView","behavior","block","inline","onBack","subTitle","placeholder","autoSize","minRows","maxRows","SendOutlined","MessagesList","openMessagesModal","Messages","setVisible","setLayoutVisible","goBack","WritePost","addressName","post","setPost","inputLocation","setInputLocation","onsubmitForm","onChange","nextPost","target","getAddress","lng","x","y","myAddress","address","region_1depth_name","region_2depth_name","padding","layout","onFinish","onsubmit","rules","required","maxLength","labelInValue","Option","Group","defaultValue","Button","split","disabled","type","showTime","dateString","min","marginTop","htmlType","markerPosition","setMap","UserProfile","nickname","selfIntroduction","livingPlace","preference1","preference2","preference3","Post","match","isLoading","setIsLoading","isRecruiting","setIsRecruiting","isModalVisible","setIsModalVisible","handleOk","handleCancel","mine","getEmail","onOk","onCancel","line","confirmButtonColor","cancelButtonColor","put","Myprofile","editing","setEditing","validatedNickname","setValidatedNickname","prevNickname","setPrevNickname","profileUpdate","nicknameChek","nextProfile","float","span","onKeyDown","marginLeft","Category","category","SearchPost","Search","setKeyword","highlightedText","includes","parts","RegExp","part","toLowerCase","onSearch","enterButton","UpdatePost","Form","useForm","form","setFieldsValue","needPeople","AppRouter","path","component","userProfile","Footer","Layout","Content","setEmail","borderRadius","backgroundColor","bottom","ArrowUpOutlined","LayoutFooter","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55de81f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.ItemGroup title=\"메뉴\">\r\n      <Menu.Item key=\"0\">\r\n        <Link to=\"/\">Home</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <Link to=\"/contents\">지도에서 찾기</Link>\r\n      </Menu.Item>\r\n    </Menu.ItemGroup>\r\n    <SubMenu title=\"종목별로 찾기\" key=\"5\">\r\n      <Menu.Item key=\"3\">축구</Menu.Item>\r\n      <Menu.Item key=\"4\">어쩌고저쩌고</Menu.Item>\r\n    </SubMenu>\r\n  </Menu>\r\n);\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Dropdown overlay={menu} trigger={['click']}>\r\n      <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n        <MenuOutlined style={{ fontSize: '20px' }} />\r\n      </a>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { UserOutlined } from '@ant-design/icons';\r\nimport { Avatar } from 'antd';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TopProfile = ({ email }) => {\r\n  const [profile, setProfile] = useState('');\r\n\r\n  const getProfileImg = async email => {\r\n    await axios.get(`/api/user/userInfo/${email}`).then(res => {\r\n      setProfile(res.data);\r\n    });\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <Link to={`/myprofile/${email}`}>내 프로필</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">설정</Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"2\">\r\n        <a href=\"http://localhost:8080/logout\">로그아웃</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n    getProfileImg(email);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        overlay={menu}\r\n        placement=\"bottomRight\"\r\n        arrow\r\n        trigger={['click']}\r\n      >\r\n        <span className=\"avatar-item\">\r\n          <Avatar\r\n            shape=\"circle\"\r\n            icon={<UserOutlined />}\r\n            src={profile.picture}\r\n          />\r\n        </span>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopProfile;\r\n","import { RecoilRoot, atom } from 'recoil';\r\n\r\nconst layoutState = atom({\r\n  key: 'layout',\r\n  default: true,\r\n});\r\n\r\nconst loginState = atom({\r\n  key: 'login',\r\n  default: false,\r\n});\r\n\r\nexport { layoutState, loginState };\r\n","import { Layout as AntLayout, Space } from 'antd';\r\nimport {\r\n  PlusSquareOutlined,\r\n  MessageOutlined,\r\n  LoginOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Navigation from 'components/Navigation';\r\nimport { Badge } from 'antd';\r\nimport TopProfile from 'components/LayoutComponents/TopProfile';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilState } from 'recoil';\r\nimport { layoutState } from 'state';\r\n\r\nimport 'components/LayoutComponents/Layout.css';\r\n\r\nconst LayoutHeader = ({ email }) => {\r\n  const { Header } = AntLayout;\r\n  const [layoutVisible, setLayoutVisible] = useRecoilState(layoutState);\r\n  //layoutVisible이 true일 때만 출력\r\n\r\n  return (\r\n    <>\r\n      {layoutVisible && (\r\n        <Header>\r\n          <div className=\"header_wrap\">\r\n            <div className=\"logo\">\r\n              <Link to=\"/\">함께, 운동</Link>\r\n            </div>\r\n            <div className=\"topMenu\">\r\n              <Space size=\"middle\">\r\n                <Link to=\"/searchpost\">\r\n                  <SearchOutlined style={{ fontSize: '30px' }} />\r\n                </Link>\r\n\r\n                {email !== '' ? (\r\n                  <>\r\n                    <Link to=\"/writepost\">\r\n                      <PlusSquareOutlined style={{ fontSize: '30px' }} />\r\n                    </Link>\r\n                    <Badge count={1}>\r\n                      <Link to=\"/messages\">\r\n                        <MessageOutlined style={{ fontSize: '30px' }} />\r\n                      </Link>\r\n                    </Badge>\r\n                    <TopProfile email={email} />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Link to=\"/loginpage\">\r\n                      <LoginOutlined style={{ fontSize: '24px' }} />\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </Space>\r\n            </div>\r\n          </div>\r\n          <div className=\"headerNav\">\r\n            <Navigation />\r\n          </div>\r\n        </Header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutHeader;\r\n","import {\r\n  HomeOutlined,\r\n  SearchOutlined,\r\n  PlusSquareOutlined,\r\n  MessageOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'components/LayoutComponents/MobileMenu.css';\r\n\r\nconst MobileMenu = ({ email }) => {\r\n  const activeStyle = {\r\n    color: '#5cdbd3',\r\n  }; //path가 일치 할 때 메뉴 스타일\r\n\r\n  return (\r\n    <div className=\"mobileMenu\">\r\n      <div className=\"mobileMenu__container\">\r\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\r\n          <HomeOutlined />\r\n        </NavLink>\r\n        <NavLink exact to=\"/search\" activeStyle={activeStyle}>\r\n          <SearchOutlined />\r\n        </NavLink>\r\n        <NavLink exact to=\"/writepost\" activeStyle={activeStyle}>\r\n          <PlusSquareOutlined />\r\n        </NavLink>\r\n        <NavLink exact to=\"/messages\" activeStyle={activeStyle}>\r\n          <MessageOutlined />\r\n        </NavLink>\r\n        <NavLink exact to={`/myprofile/${email}`} activeStyle={activeStyle}>\r\n          <UserOutlined />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenu;\r\n","import { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { List } from 'antd';\r\n\r\nconst LocalSeraching = ({ saveKeywordAddress }) => {\r\n  const REST_API_KEY = 'b848a4ccc1802d07fa250ac646972888';\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [addressObject, setAddressObject] = useState([]);\r\n  const page = '1';\r\n\r\n  // const onSearch = value => {};\r\n\r\n  const getKeyword = async () => {\r\n    await Swal.fire({\r\n      title: '키워드로 검색하기',\r\n      input: 'text',\r\n      text: '키워드를 입력하세요',\r\n      inputPlaceholder: 'ex) 가천대학교',\r\n      confirmButtonText: '입력',\r\n      showCancelButton: true,\r\n      cancelButtonText: '취소',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        setQuery(result.value);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    await axios({\r\n      method: 'get',\r\n      url: 'https://dapi.kakao.com//v2/local/search/keyword',\r\n      headers: { Authorization: 'KakaoAK ' + REST_API_KEY },\r\n      params: {\r\n        page: page,\r\n        size: 10,\r\n        query: query,\r\n      },\r\n    }).then(res => {\r\n      setAddressObject(res.data.documents);\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getKeyword();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query !== '') {\r\n      getData();\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        <div>\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={addressObject}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  title={item.place_name}\r\n                  description={item.address_name}\r\n                  onClick={() => saveKeywordAddress(item)}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocalSeraching;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'routes/MapView.css';\r\n\r\nconst MapView = ({ history }) => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }; //뒤로가기 버튼\r\n\r\n  const getData = async () => {\r\n    await axios.get('/api/board/all').then(res => {\r\n      const data = res.data;\r\n      setLocations(data);\r\n\r\n      const tempArray = []; //새 배열을 만듭니다.\r\n\r\n      for (var i = 0; i < data.length; i++) {\r\n        tempArray[i] = {\r\n          title: data[i].title,\r\n          latlng: new kakao.maps.LatLng(\r\n            data[i].locationY, //위도\r\n            data[i].locationX, //경도 .....\r\n          ),\r\n          content: data[i].content, //내용\r\n          idx: data[i].id, //아이디\r\n        };\r\n      }\r\n\r\n      setPositions(positions.concat(tempArray));\r\n    });\r\n  };\r\n\r\n  const { kakao } = window;\r\n\r\n  const options = {\r\n    center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n    level: 3,\r\n  };\r\n\r\n  const container = useRef(null);\r\n  //useRef로 div map에 접근\r\n\r\n  const kakaoMap = () => {\r\n    //현재 위치를 중앙으로 해서 지도를 출력합니다.\r\n\r\n    console.log(positions);\r\n    const map = new kakao.maps.Map(container.current, options); //지도 생성\r\n\r\n    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\r\n    if (navigator.geolocation) {\r\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        var lat = position.coords.latitude, //위도 (y)\r\n          lon = position.coords.longitude; //경도 (x)\r\n\r\n        var locPosition = new kakao.maps.LatLng(lat, lon);\r\n        map.setCenter(locPosition);\r\n      });\r\n    }\r\n\r\n    // 마커 이미지의 이미지 주소입니다\r\n    var imageSrc =\r\n      'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png';\r\n\r\n    positions.forEach(function(position) {\r\n      var imageSize = new kakao.maps.Size(24, 35);\r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: map, // 마커를 표시할 지도\r\n        position: position.latlng, // 마커를 표시할 위치\r\n        title: position.title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n        image: markerImage, // 마커 이미지\r\n      });\r\n\r\n      var content = document.createElement('div');\r\n      content.className = 'customoverlay';\r\n      var link = document.createElement('div');\r\n      link.className = 'link';\r\n      content.appendChild(link);\r\n      var goPost = document.createElement('div');\r\n      goPost.className = 'title';\r\n      goPost.appendChild(document.createTextNode(position.title));\r\n      goPost.onclick = () => history.push(`/post/${position.idx}`);\r\n      link.appendChild(goPost);\r\n\r\n      // 마커에 표시할 커스텀 오버레이\r\n      var customOverlay = new kakao.maps.CustomOverlay({\r\n        content: content,\r\n        map: map,\r\n        position: marker.getPosition(),\r\n      });\r\n    });\r\n  }; //kakaomap\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    kakaoMap();\r\n  }, [positions]); //positions의 값이 바뀔때마다 재랜더링 합니다\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"map\"\r\n        style={{ width: '100%', height: '80vh', zIndex: '0' }}\r\n        ref={container}\r\n      />\r\n\r\n      <div>\r\n        (지역이 다를 땐 축소를 많이 하면 마커가 보입니다.) 우선 현재 위치를\r\n        불러와 중심 좌표로 설정한 후, 목록에서 위도 경도 가져와서 뿌려줌\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n","import { useRef, useEffect, useState } from 'react';\r\nimport LocalSeraching from 'components/LocalSearching';\r\nimport DateForm from 'components/DateForm';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport MapView from './MapView';\r\n\r\nconst Contents = ({ history }) => {\r\n  const [message, setMessage] = useState([]);\r\n\r\n  return (\r\n    <div className=\"TestComponent\">\r\n      {localStorage.getItem('token') ? <>로그인중~!</> : <>로그아웃중~!</>}\r\n      <h1>연습장 </h1>\r\n      {/* <LocalSeraching /> */}\r\n      <MapView history={history} />\r\n      <div className=\"dummy\">\r\n        <br />\r\n\r\n        {moment('2021-09-30T18:01:28.198913800').format('YY/DD')}\r\n        {/* moment 라이브러리 테스트 */}\r\n        {/* <DateForm /> */}\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n","import { Carousel } from 'antd';\r\n\r\nconst contentStyle = {\r\n  color: '#fff',\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n};\r\n\r\nconst imgFit = {\r\n  height: '100%',\r\n  width: '100%',\r\n  objectFit: 'cover',\r\n};\r\n\r\nconst setCarousel = [\r\n  {\r\n    key: 1,\r\n    src: 'banner.jpg',\r\n  },\r\n  {\r\n    key: 2,\r\n    src: 'banner2.jpg',\r\n  },\r\n];\r\n\r\nconst HomeCarousel = () => {\r\n  return (\r\n    <Carousel autoplay>\r\n      {setCarousel.map((list) => (\r\n        <div key={list.key}>\r\n          <h3 style={contentStyle}>\r\n            <img style={imgFit} src={list.src} alt={list.src} />\r\n          </h3>\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default HomeCarousel;\r\n","import { Link } from 'react-router-dom';\r\nimport 'components/ListCard.scss';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { Row, Col, Spin, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  FieldTimeOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst ListCard = ({ getApi, keyword }) => {\r\n  //종목을 받아옴\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState('');\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(0); //page가 0부터 시작\r\n\r\n  const { Meta } = Card;\r\n\r\n  const thumbnailSwitch = event => {\r\n    const setThumbnail = {\r\n      //종목별 썸네일 이미지를 설정합니다. 이미지는 나중에 수정.\r\n      //이건\r\n      축구:\r\n        'https://image.ytn.co.kr/general/jpg/2020/0918/202009181020016953_t.jpg',\r\n      조깅:\r\n        'http://kormedi.com/wp-content/uploads/2020/03/antonioguillem-580x387.jpg',\r\n      야구:\r\n        'https://news.hmgjournal.com/images_n/contents/191204_baseball_01.png',\r\n      야구야구:\r\n        'https://news.hmgjournal.com/images_n/contents/191204_baseball_01.png',\r\n\r\n      기타:\r\n        'https://www.costco.co.kr/medias/sys_master/images/h73/h42/9863158399006.jpg',\r\n    };\r\n\r\n    //종목에 따라서 썸네일을 리턴합니다..\r\n    var img;\r\n\r\n    if (setThumbnail.hasOwnProperty(event)) {\r\n      img = setThumbnail[event];\r\n    } else {\r\n      img = setThumbnail.기타;\r\n    }\r\n\r\n    return img;\r\n  };\r\n\r\n  const moreData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // await axios.get(`${getApi}?page=${page}`).then(res => {\r\n      await axios\r\n        .get(\r\n          `http://ec2-54-180-175-20.ap-northeast-2.compute.amazonaws.com:8080/api/board?page=0`,\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          setData(data.concat(res.data.content));\r\n          setPage(page + 1);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    moreData();\r\n  }, [getApi]);\r\n\r\n  useEffect(() => {}, [getApi]);\r\n\r\n  return (\r\n    <div style={{ paddingTop: '20px' }}>\r\n      <div className=\"listCard\">\r\n        <InfiniteScroll\r\n          dataLength={data.length}\r\n          next={moreData}\r\n          hasMore={hasMore}\r\n          endMessage=\"끝!\"\r\n        >\r\n          <Row gutter={10}>\r\n            {data.map(list => (\r\n              <Col xs={12} sm={12} md={8}>\r\n                <Link to={`/post/${list.id}`}>\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: '100%' }}\r\n                    cover={\r\n                      <img\r\n                        className={!list.recruiting && 'card__img--closed'}\r\n                        alt={list.title}\r\n                        src={thumbnailSwitch(list.event)} //조건에 따라서 맞는 썸네일 이미지를 불러오겠습니다.\r\n                      />\r\n                    }\r\n                    actions={[\r\n                      [<UserOutlined />, list.needPeopleNum],\r\n                      [\r\n                        <CalendarOutlined />,\r\n                        moment(list.eventTime).format('YY/MM/DD'), //EventTime에서 연,월,일만\r\n                      ],\r\n                      [\r\n                        <FieldTimeOutlined />,\r\n                        moment(list.eventTime).format('HH:mm'), //시, 분\r\n                      ],\r\n                    ]}\r\n                  >\r\n                    {!list.recruiting && (\r\n                      <Meta\r\n                        className=\"card__completed\"\r\n                        description=\"🔒 모 집 완 료\" //모집완료시 표시\r\n                      />\r\n                    )}\r\n\r\n                    <Meta\r\n                      className=\"card__category\"\r\n                      description={list.event} //종목명\r\n                    />\r\n\r\n                    <Meta\r\n                      className=\"card__profile\"\r\n                      avatar={<Avatar size={60} src={list.userPicture} />} //프로필이미지 구현 예정?\r\n                    />\r\n                    <Meta\r\n                      className=\"card__name\"\r\n                      description={list.writer} //글쓴이 닉네임\r\n                    />\r\n\r\n                    <Meta\r\n                      title={list.title} //제목\r\n                    />\r\n                    <Meta\r\n                      className=\"card__name\"\r\n                      description={`${list.region1Depth} ${list.region2Depth}`} //지역명\r\n                    />\r\n                    <Meta\r\n                      className=\"card__name\"\r\n                      description={list.placeName} //지역명\r\n                    />\r\n                    {/* <Meta\r\n                      className=\"card__name\"\r\n                      description=\"해시?\" //해시태그\r\n                    /> */}\r\n\r\n                    {/* <Meta\r\n                      className=\"card__summary\"\r\n                      description={list.content} //내용(한줄만 css에서 자름)\r\n                    /> */}\r\n                  </Card>\r\n                </Link>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import HomeCarousel from 'components/HomeCarousel';\r\nimport { Link } from 'react-router-dom';\r\nimport ListCard from 'components/ListCard';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <HomeCarousel />\r\n\r\n      <div className=\"home__icons\">\r\n        <Link to=\"/category/축구\">\r\n          <div className=\"home__icons--icon\">\r\n            <img src=\"football.png\" alt=\"football\" />\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/category/야구\">\r\n          <div className=\"home__icons--icon\">\r\n            <img src=\"baseball.png\" alt=\"baseball\" />\r\n          </div>\r\n        </Link>\r\n        <div className=\"home__icons--icon\">\r\n          <img src=\"badminton.png\" alt=\"badminton\" />\r\n        </div>\r\n        <div className=\"home__icons--icon\">\r\n          <img src=\"basketball.png\" alt=\"basketball\" />\r\n        </div>\r\n      </div>\r\n\r\n      <h1 style={{ fontWeight: 700, marginBottom: '20px' }}> 찾아보기 😙 </h1>\r\n\r\n      <ListCard getApi={'/api/board'} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const LoginPage = () => {\r\n  return (\r\n    <>\r\n      <a href=\"http://ec2-54-180-175-20.ap-northeast-2.compute.amazonaws.com:8080/oauth2/authorization/google\">\r\n        임시 구글로그인 (localhost:8080으로...)\r\n      </a>\r\n      <a href=\"http://localhost:8080/oauth2/authorization/kakao\">\r\n        임시 카카오 로그인 (localhost:8080으로...)\r\n      </a>\r\n      <a href=\"http://localhost:8080/oauth2/authorization/naver\">\r\n        임시 네이버 로그인 (localhost:8080으로...)\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import 'components/Message.css';\r\n\r\nconst Message = ({ index, user, message }) => {\r\n  let isMessageRowOwn = false;\r\n\r\n  if (user.id === 'rabbit') {\r\n    isMessageRowOwn = true;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"chat__timestamp\">2021년 9월 19일</div> */}\r\n\r\n      {/* 받은 메세지 */}\r\n\r\n      {isMessageRowOwn ? (\r\n        <div className=\"message-row message-row--own\">\r\n          <div className=\"message-row__content\">\r\n            <div className=\"message__info\">\r\n              <span className=\"message__bubble\">{message}</span>\r\n              <span className=\"message__time\">23:17</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"message-row\">\r\n          <img\r\n            src=\"https://ww.namu.la/s/50ec79e07868dd8be7c62f3ca97267517b4f7b8d43b05470c645b336541fdd3593e3a3469a82a8c904f050382ff3c8551606ac7de623941d726582f74a03670a7f0972e3a8439ec9911ee60a1a5c76e1856d5e55e53a42f365f1c95a145ef612\"\r\n            alt=\"임시\"\r\n          />\r\n\r\n          <div className=\"message-row__content\">\r\n            <span className=\"message__author\">{user.name}</span>\r\n            <div className=\"message__info\">\r\n              <span className=\"message__bubble\">{message}</span>\r\n              <span className=\"message__time\">21:34</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { PageHeader } from 'antd';\r\nimport { Input } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\n\r\nimport 'components/ListCard.scss';\r\nimport axios from 'axios';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nimport Message from 'components/Message';\r\nimport ScrollToTop from 'components/ScrollToTop';\r\n\r\nconst MessagesRoom = ({ visible, closeMessagesModal }) => {\r\n  const { TextArea } = Input;\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [item, setItem] = useState([]);\r\n  const [scroll, setScroll] = useState('');\r\n\r\n  const scrollRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    if (loading === false) {\r\n      scrollRef.current.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'end',\r\n        inline: 'nearest',\r\n      }); //스크롤바를 맨 밑으로 내리는 함수\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.get('dummy/fakeChat.json').then(res => {\r\n        const datas = res.data;\r\n        setData(datas.slice(-9)); //일단 마지막의 9개를 보여주도록 했습니다. 변수로 설정하는 게 나을 듯..\r\n        setItem(datas.slice(0, datas.length - 9)); //나머지를 저장합니다\r\n      });\r\n    } catch (e) {\r\n      console.log('-_-+');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const moreData = () => {\r\n    setLoading(true);\r\n    console.log('more data...');\r\n    setData(item.slice(-9).concat(data));\r\n    setItem(item.slice(0, item.length - 9));\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [visible]); //일단 창이 열리면 맨 밑으로 가는 함수가 실행되는데 나중에 대화 내용이 갱신되면 실행되도록 수정해야 합니다.\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {visible ? (\r\n        <div className=\"messages__modal\">\r\n          <PageHeader\r\n            className=\"site-page-header\"\r\n            onBack={() => closeMessagesModal()} //창이 닫힙니다.\r\n            title=\"이름\"\r\n            subTitle=\"@aa\"\r\n          />\r\n\r\n          <div className=\"messages__modal--container\">\r\n            <div className=\"messages__modal--input\">\r\n              <div className=\"messages__modal--input--textArea\">\r\n                <TextArea\r\n                  placeholder=\"입력\"\r\n                  autoSize={{ minRows: 1, maxRows: 6 }} //최소 1줄, 최대 6줄까지 엔터로 늘어납니다.\r\n                />\r\n              </div>\r\n\r\n              <div className=\"messages_modal--input--send\">\r\n                <SendOutlined />\r\n              </div>\r\n            </div>\r\n            {/* 텍스트 입력창 */}\r\n            <div className=\"messages__modal--messages\">\r\n              <div ref={scrollRef}>\r\n                {loading ? (\r\n                  <>loading...</>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={moreData}>이전 대화 불러오기</button>\r\n                    {/* 예쁜 버튼으로 바꿔주세요 */}\r\n                    {data.map((list, index) => (\r\n                      <Message\r\n                        key={index}\r\n                        user={list.user}\r\n                        message={list.message}\r\n                      />\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div ref={scrollRef} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesRoom;\r\n","import { Avatar } from 'antd';\r\nimport { Card } from 'antd';\r\n\r\nconst MessagesList = ({ openMessagesModal }) => {\r\n  const { Meta } = Card;\r\n\r\n  return (\r\n    <>\r\n      <a onClick={openMessagesModal}>\r\n        <Card style={{ width: '100%' }}>\r\n          <Meta\r\n            avatar={\r\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n            }\r\n            title=\"Card title\"\r\n            description=\"This is the description\"\r\n          />\r\n        </Card>\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesList;\r\n","import 'routes/Messages.css';\r\nimport MessagesRoom from 'routes/MessagesRoom';\r\nimport { useState, useEffect } from 'react';\r\nimport { layoutState } from 'state';\r\nimport { useRecoilState } from 'recoil';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport MessagesList from 'components/MessagesList';\r\n\r\nconst Messages = ({ history }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [layoutVisible, setLayoutVisible] = useRecoilState(layoutState);\r\n\r\n  setLayoutVisible(false);\r\n\r\n  const openMessagesModal = () => {\r\n    if (visible) {\r\n      setVisible(false);\r\n    }\r\n    setVisible(true);\r\n  };\r\n\r\n  const closeMessagesModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  //채팅창 토글\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }; //뒤로가기 버튼\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setLayoutVisible(true); //채팅을 나가면 레이아웃이 보임\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"messages__inbox--container\">\r\n      <div className=\"messages__inbox\">\r\n        <div className=\"messages__header\">\r\n          <div className=\"messages__header--column\">\r\n            <span>\r\n              <HomeOutlined style={{ fontSize: '24px' }} onClick={goBack} />\r\n            </span>\r\n          </div>\r\n          <div className=\"messages__header--column\">\r\n            <span>\r\n              <h1>MESSAGES</h1>\r\n            </span>\r\n          </div>\r\n          <div className=\"messages__header--column\" />\r\n        </div>\r\n        <div className=\"messages__inbox--wrap\">\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          <MessagesList openMessagesModal={openMessagesModal} />\r\n          {/* 여기는 나중에 리스트로 바꿔야 합니다 */}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <MessagesRoom\r\n          visible={visible}\r\n          closeMessagesModal={closeMessagesModal}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './WritePost';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Popconfirm,\r\n  PageHeader,\r\n  Radio,\r\n  Space,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport LocalSeraching from 'components/LocalSearching';\r\nimport 'routes/WritePost.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst WritePost = ({ history }) => {\r\n  const [post, setPost] = useState({\r\n    addressName: '　',\r\n    content: '',\r\n    event: '',\r\n    eventTime: '',\r\n    locationX: '',\r\n    locationY: '',\r\n    needPeopleNum: 1,\r\n    placeName: '　',\r\n    region1Depth: '　',\r\n    region2Depth: '　',\r\n    title: '',\r\n  }); //게시글\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const [inputLocation, setInputLocation] = useState(null);\r\n\r\n  const { title, content } = post; //구조분해할당\r\n\r\n  //------------------------onChange등등\r\n\r\n  const onsubmitForm = async () => {\r\n    await Swal.fire({\r\n      title: '등록하시겠습니까?',\r\n      showCancelButton: true,\r\n      confirmButtonText: '등록',\r\n      cancelButtonText: '취소',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        axios.post('/api/board/posts', post).then(() => {\r\n          Swal.fire('저장 완료!', '', 'success');\r\n          history.push('/');\r\n        });\r\n      }\r\n    });\r\n  }; //전송하고 홈으로~\r\n\r\n  const onChangeDate = (value, dateString) => {\r\n    console.log(dateString);\r\n    const nextPost = {\r\n      ...post,\r\n      eventTime: dateString,\r\n    };\r\n    setPost(nextPost);\r\n  }; //date picker\r\n\r\n  const onChange = e => {\r\n    const nextPost = {\r\n      ...post,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setPost(nextPost);\r\n  }; //제목과 내용\r\n\r\n  const onChangeNumber = value => {\r\n    console.log(value);\r\n    const nextPost = {\r\n      ...post,\r\n      needPeopleNum: value,\r\n    };\r\n    setPost(nextPost);\r\n  }; //인원수\r\n\r\n  const onChangeEvent = value => {\r\n    const nextPost = {\r\n      ...post,\r\n      event: value.value,\r\n    };\r\n    setPost(nextPost);\r\n  }; //종목\r\n\r\n  //--------------------충격! 어쩌다 이렇게 비효율적인 코드가....... (하지만머리가안돌아감)\r\n\r\n  //--------------------위치 관련-------------------------\r\n\r\n  const myLocation = () => {\r\n    //클릭하면 나의 위치를 넘김\r\n\r\n    // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\r\n    if (navigator.geolocation) {\r\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        var lat = position.coords.latitude; //위도 (y)\r\n        var lng = position.coords.longitude; //경도 (x)\r\n\r\n        getAddress(lat, lng);\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: '현재 위치를 불러올 수 없습니다!',\r\n      });\r\n    } //\r\n  };\r\n\r\n  const getAddress = async (lat, lng) => {\r\n    const REST_API_KEY = 'b848a4ccc1802d07fa250ac646972888';\r\n\r\n    await axios({\r\n      method: 'get',\r\n      url: 'https://dapi.kakao.com//v2/local/geo/coord2address',\r\n      headers: { Authorization: 'KakaoAK ' + REST_API_KEY },\r\n      params: {\r\n        x: lng,\r\n        y: lat,\r\n      },\r\n    }).then(res => {\r\n      const myAddress = res.data.documents[0].address;\r\n\r\n      const {\r\n        address_name,\r\n        region_1depth_name,\r\n        region_2depth_name,\r\n      } = myAddress; //구조분해할당\r\n\r\n      Swal.fire({\r\n        title: '이 위치를 등록할까요?',\r\n        text: address_name,\r\n        showCancelButton: true,\r\n        confirmButtonText: '등록',\r\n        cancelButtonText: '취소',\r\n      }).then(result => {\r\n        if (result.isConfirmed) {\r\n          const nextPost = {\r\n            ...post,\r\n            locationX: lng,\r\n            locationY: lat,\r\n            placeName: '사용자 위치',\r\n            region1Depth: region_1depth_name, //시도 단위\r\n            region2Depth: region_2depth_name, //구 단위\r\n            addressName: address_name,\r\n          };\r\n          setPost(nextPost);\r\n          setInputLocation(address_name);\r\n          console.log(inputLocation);\r\n          setVisible(false);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  //키워드 검색--------------------------------------------------------------------\r\n\r\n  const keywordLocation = () => {\r\n    setVisible(!visible);\r\n  }; //컴포넌트 토글 버튼\r\n\r\n  const saveKeywordAddress = item => {\r\n    const { place_name, address_name, x, y } = item;\r\n\r\n    Swal.fire({\r\n      title: '이 위치를 등록할까요?',\r\n      text: address_name,\r\n      showCancelButton: true,\r\n      confirmButtonText: '등록',\r\n      cancelButtonText: '취소',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        const nextPost = {\r\n          ...post,\r\n          locationX: x,\r\n          locationY: y,\r\n          placeName: place_name,\r\n          region1Depth: address_name.split(' ')[0], //시도 단위\r\n          region2Depth: address_name.split(' ')[1], //구 단위 .........풀 주소만 지원하는 관계로 단어로 자름 ~_~ ..\r\n          addressName: address_name,\r\n        };\r\n        setPost(nextPost);\r\n        setInputLocation(address_name);\r\n        setVisible(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {}, [visible]);\r\n\r\n  //-----------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"writePost\">\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        onBack={() => history.goBack()}\r\n        title=\"게시글 작성\"\r\n        subTitle=\"모집글을 작성합니다.\"\r\n      />\r\n      <div className=\"postForm\" style={{ padding: '20px' }}>\r\n        <Form\r\n          layout=\"horizontal\"\r\n          onFinish={onsubmitForm}\r\n          size=\"large\"\r\n          onsubmit=\"return false\"\r\n        >\r\n          <Form.Item\r\n            rules={[{ required: true, message: '제목을 입력하세요' }]}\r\n            name=\"제목\"\r\n          >\r\n            <Input\r\n              placeholder=\"제목\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              maxLength=\"50\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '종목을 고르세요' }]}\r\n            name=\"종목\"\r\n          >\r\n            <Select\r\n              labelInValue\r\n              name=\"종목\"\r\n              value=\"종목\"\r\n              placeholder=\"종목\"\r\n              onChange={onChangeEvent}\r\n            >\r\n              <Select.Option value=\"축구\">축구</Select.Option>\r\n              <Select.Option value=\"야구\">야구</Select.Option>\r\n              <Select.Option value=\"농구\">농구</Select.Option>\r\n              <Select.Option value=\"기타\">기타</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Radio.Group size=\"large\" defaultValue=\"a\">\r\n              <Space size=\"middle\">\r\n                <Radio.Button value=\"a\" onClick={() => setInputLocation('')}>\r\n                  미지정\r\n                </Radio.Button>\r\n                <Radio.Button value=\"b\" onClick={myLocation}>\r\n                  내 위치\r\n                </Radio.Button>\r\n                <Radio.Button value=\"c\" onClick={keywordLocation}>\r\n                  키워드로 검색\r\n                </Radio.Button>\r\n              </Space>\r\n            </Radio.Group>\r\n\r\n            {visible && (\r\n              <LocalSeraching saveKeywordAddress={saveKeywordAddress} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              disabled\r\n              placeholder=\"위치\"\r\n              name=\"adress\"\r\n              value={inputLocation}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"date-picker\"\r\n            rules={[\r\n              {\r\n                type: 'object',\r\n                required: true,\r\n                message: '날짜와 시간을 입력하세요',\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker\r\n              showTime\r\n              format=\"YYYY-MM-DD HH:mm\"\r\n              onChange={onChangeDate}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"인원수\"\r\n            rules={[{ required: true, message: '1 이상의 수를 입력하세요' }]}\r\n          >\r\n            <InputNumber\r\n              name=\"Number\"\r\n              min={1}\r\n              placeholder=\"인원수\"\r\n              onChange={onChangeNumber}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '소개글을 입력하세요' }]}\r\n            name=\"소개글\"\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"소개글\"\r\n              name=\"content\"\r\n              value={content}\r\n              onChange={onChange}\r\n              maxLength=\"500\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginTop: '25px' }}\r\n              htmlType=\"submit\"\r\n            >\r\n              등록\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritePost;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst Map = ({ lat, lng }) => {\r\n  //현재 위치를 중앙으로 해서 지도를 출력합니다.\r\n  const { kakao } = window;\r\n  console.log(lat);\r\n  console.log(lng);\r\n\r\n  const options = {\r\n    center: new kakao.maps.LatLng(33.450701, 126.570667), //중심위치 초기 설정(카카오)\r\n    level: 3,\r\n  };\r\n\r\n  const container = useRef(null);\r\n  //useRef로 div map에 접근\r\n\r\n  useEffect(() => {\r\n    const map = new kakao.maps.Map(container.current, options); //지도 생성\r\n    var locPosition = new kakao.maps.LatLng(lat, lng);\r\n    map.setCenter(locPosition);\r\n    // 마커가 표시될 위치입니다\r\n    var markerPosition = new kakao.maps.LatLng(lat, lng);\r\n\r\n    // 마커를 생성합니다\r\n    var marker = new kakao.maps.Marker({\r\n      position: markerPosition,\r\n    });\r\n\r\n    // 마커가 지도 위에 표시되도록 설정합니다\r\n    marker.setMap(map);\r\n\r\n    //\r\n    return () => {};\r\n  }, [lat, lng]); //위도 경도 바뀔 때마다 실행\r\n\r\n  return (\r\n    <div\r\n      className=\"map\"\r\n      style={{ width: '100%', height: '300px', zIndex: '0' }}\r\n      ref={container}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst UserProfile = ({ email }) => {\r\n  const [profile, setProfile] = useState('');\r\n\r\n  const getData = async () => {\r\n    await axios.get(`/api/user/userInfo/${email}`).then(res => {\r\n      setProfile(res.data);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  const {\r\n    nickname,\r\n    selfIntroduction,\r\n    picture,\r\n    livingPlace,\r\n    preference1,\r\n    preference2,\r\n    preference3,\r\n  } = profile;\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Avatar src={picture} icon={<UserOutlined />} size={64} />\r\n      <li>{nickname}</li>\r\n      <li>{selfIntroduction}</li>\r\n      <li>{livingPlace}</li>\r\n      <li>{preference1}</li>\r\n      <li>{preference2}</li>\r\n      <li>{preference3}</li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Map from 'components/Map';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Button } from 'antd';\r\nimport UserProfile from 'routes/UserProfile';\r\n\r\nconst Post = ({ match, history }) => {\r\n  const { idx } = match.params;\r\n  //넘겨받은 idx를 기준으로 글을 조회하도록 함\r\n\r\n  const [post, setPost] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecruiting, setIsRecruiting] = useState('');\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false); //모달 표시\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  //모달관련함수\r\n\r\n  const {\r\n    writer,\r\n    title,\r\n    content,\r\n    locationX,\r\n    locationY,\r\n    needPeopleNum,\r\n    eventTime,\r\n    event,\r\n    addressName,\r\n    placeName,\r\n    mine,\r\n    recruiting,\r\n    email,\r\n  } = post;\r\n\r\n  const getEmail = async () => {\r\n    await axios\r\n      .get(\r\n        'http://ec2-54-180-175-20.ap-northeast-2.compute.amazonaws.com:8080/api/board?page=0',\r\n      )\r\n      .then(res => {\r\n        if (res.data === '') {\r\n          history.push('/LoginPage');\r\n        }\r\n      });\r\n  };\r\n\r\n  const postDelete = () => {\r\n    Swal.fire({\r\n      title: '삭제',\r\n      text: '이 글을 삭제하시겠습니까?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      cancelButtonText: '취소',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: '삭제',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        axios.put(`/api/board/posts/${idx}/isDelete`);\r\n        Swal.fire('삭제 완료!', '게시글을 삭제했습니다', 'success');\r\n        history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  const postClose = () => {\r\n    Swal.fire({\r\n      title: '모집 완료',\r\n      text: '모집을 마감하시겠습니까?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      cancelButtonText: '취소',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: '확인',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        axios.put(`/api/board/posts/${idx}/endRecruiting`);\r\n        setIsRecruiting(false);\r\n        Swal.fire('모집 완료!', '요청을 완료했습니다', 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await axios.get(`/api/board/posts/${idx}`).then(res => {\r\n        setPost(res.data);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getEmail();\r\n  }, [isRecruiting]);\r\n\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <div className=\"post\">\r\n          <div style={{ paddingTop: '20px' }}>\r\n            {addressName !== '　' && <Map lat={locationY} lng={locationX} />}\r\n            <li>주소 있을 때만 지도 출력!</li>\r\n            <li>아이디: {idx}</li>\r\n            <li\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => setIsModalVisible(true)}\r\n            >\r\n              작성자: {writer}\r\n            </li>\r\n            {isModalVisible && (\r\n              <Modal\r\n                title={`${writer} 님의 프로필`}\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n              >\r\n                <UserProfile\r\n                  email={email}\r\n                  handleCancel={handleCancel}\r\n                  handleOk={handleOk}\r\n                  isModalVisible={isModalVisible}\r\n                />\r\n              </Modal>\r\n            )}\r\n            <li>제목: {title}</li>\r\n            <li>\r\n              내용:{' '}\r\n              {content.split('\\n').map(line => (\r\n                <>\r\n                  {line} <br />\r\n                </>\r\n              ))}{' '}\r\n            </li>\r\n            <li>위도: {locationY}</li>\r\n            <li>경도: {locationX}</li>\r\n            <li>사람수: {needPeopleNum}</li>\r\n            <li>날짜: {eventTime}</li>\r\n            <li>종목: {event}</li>\r\n            <li>주소: {addressName}</li>\r\n            <li>장소이름: {placeName} </li>\r\n            {recruiting ? <li>모집중</li> : <li>모집완료</li>}\r\n            {mine ? <li>내가 쓴 글임</li> : <li>남이 쓴 글임</li>}\r\n            <br />\r\n            <br />\r\n            {!mine && recruiting && <button>참가신청</button>}\r\n            👈 내가 쓴 글이 아니고 모집중이면 표시 <br />\r\n            {mine && (\r\n              <>\r\n                {recruiting && <button onClick={postClose}>모집마감</button>}\r\n                👈 내가 쓴 글인데 모집중이면 표시\r\n                <br />\r\n                <Link to={`/update/${idx}`}>\r\n                  {' '}\r\n                  <button>수정</button>\r\n                </Link>\r\n                <button onClick={postDelete}>삭제</button>\r\n                👈 내가 쓴 글이면 표시\r\n              </>\r\n            )}\r\n            <br /> <br />\r\n            <button onClick={() => history.push('/')}>뒤로가기</button>\r\n            👈 항상 표시\r\n            <br />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>loading....</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Button, Card, Col, Row } from 'antd';\r\nimport 'routes/Myprofile.css';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport LoginPage from 'routes/LoginPage';\r\nimport { Avatar, Input } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Myprofile = ({ match }) => {\r\n  const { email } = match.params;\r\n  const [profile, setProfile] = useState(''); //프로필\r\n  const [editing, setEditing] = useState(false); //수정 여부\r\n  const [validatedNickname, setValidatedNickname] = useState(true); //중복확인 여부\r\n  const [prevNickname, setPrevNickname] = useState('');\r\n\r\n  const getData = async () => {\r\n    await axios.get(`/api/user/userInfo/${email}`).then(res => {\r\n      setProfile(res.data);\r\n      setPrevNickname(res.data.nickname);\r\n      console.log(res.data);\r\n    });\r\n  }; //프로필 불러옴\r\n\r\n  const {\r\n    nickname,\r\n    selfIntroduction,\r\n    picture,\r\n    livingPlace,\r\n    preference1,\r\n    preference2,\r\n    preference3,\r\n  } = profile;\r\n\r\n  // for (let i = 10; i < 36; i++) {\r\n  //   const value = i.toString(36) + i;\r\n  //   options.push({\r\n  //     label: `Long Label: ${value}`,\r\n  //     value,\r\n  //   });\r\n  // }\r\n\r\n  const profileUpdate = async () => {\r\n    if (validatedNickname) {\r\n      console.log(profile);\r\n      await axios\r\n        .put(`/api/user/userInfo/${email}`, profile)\r\n        .then(() => setEditing(false));\r\n      Swal.fire({ title: '수정완료~_~!!!', icon: 'success' });\r\n    } else {\r\n      Swal.fire({ title: '닉네임 중복 확인을 해주세요', icon: 'warning' });\r\n    }\r\n  }; //프로필 업데이트함\r\n\r\n  const nicknameChek = async () => {\r\n    if (prevNickname === nickname) {\r\n      Swal.fire('사용할 수 있는 닉네임입니다');\r\n      setValidatedNickname(true);\r\n    } else\r\n      await axios\r\n        .get(`/api/user/userInfo/DuplicateCheck/${nickname}`)\r\n        .then(res => {\r\n          setValidatedNickname(res.data);\r\n          if (res.data == true) {\r\n            Swal.fire({ title: '사용할 수 있는 닉네임입니다', icon: 'info' });\r\n          } else {\r\n            Swal.fire({ title: '다른 닉네임을 설정해주세요', icon: 'error' });\r\n          }\r\n        });\r\n  }; //중복확인함\r\n\r\n  // 초기에는 중복확인 true\r\n  // 닉네임 인풋에 키보드를 눌렀을 때 false로 바뀜\r\n  // 중복체크를 했을 때, 기존 닉네임과 같은 거 입력해도 true\r\n  // 중복일 때 false, 중복되지 않을 때 true\r\n\r\n  const onChange = e => {\r\n    const nextProfile = {\r\n      ...profile,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setProfile(nextProfile);\r\n  }; //수정값 적용\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {email !== '' ? (\r\n        <>\r\n          <Avatar\r\n            size={128}\r\n            shape=\"circle\"\r\n            icon={<UserOutlined />}\r\n            src={picture}\r\n          />\r\n          {!editing ? (\r\n            <Button\r\n              onClick={() => setEditing(!editing)}\r\n              style={{ float: 'right', marginBottom: '30px' }}\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size=\"large\"\r\n            >\r\n              수정\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                onClick={profileUpdate}\r\n                style={{ float: 'right', marginBottom: '30px' }}\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                size=\"large\"\r\n              >\r\n                등록\r\n              </Button>\r\n              <Button\r\n                onClick={() => setEditing(false)}\r\n                style={{ float: 'right', marginBottom: '30px' }}\r\n                shape=\"round\"\r\n                size=\"large\"\r\n              >\r\n                취소\r\n              </Button>\r\n            </>\r\n          )}\r\n          <Form className=\"nicknamewrap\">\r\n            <div className=\"emailbottom\">{email}</div>\r\n            <Col span={22}>\r\n              {editing ? (\r\n                <>\r\n                  <Input\r\n                    onChange={onChange}\r\n                    name=\"nickname\"\r\n                    value={nickname}\r\n                    onKeyDown={() => setValidatedNickname(false)}\r\n                  />\r\n\r\n                  {!validatedNickname && (\r\n                    <Button onClick={nicknameChek}>중복 확인</Button>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span style={{ marginLeft: '4%' }}>{nickname} </span>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Form>\r\n\r\n          <div className=\"nicknamewrap\">\r\n            <div className=\"emailbottom\">자기 소개</div>\r\n            <Col span={22}>\r\n              {editing ? (\r\n                <Input\r\n                  onChange={onChange}\r\n                  name=\"selfIntroduction\"\r\n                  value={selfIntroduction}\r\n                />\r\n              ) : (\r\n                <span className=\"emaildetail\">{selfIntroduction}</span>\r\n              )}\r\n            </Col>\r\n          </div>\r\n          <div className=\"nicknamewrap\">\r\n            <div className=\"emailbottom\">지역</div>\r\n            <Col span={22}>\r\n              {editing ? (\r\n                <Input\r\n                  onChange={onChange}\r\n                  name=\"livingPlace\"\r\n                  value={livingPlace}\r\n                />\r\n              ) : (\r\n                <span className=\"emaildetail\">{livingPlace}</span>\r\n              )}\r\n            </Col>\r\n          </div>\r\n\r\n          <div className=\"nicknamewrap\">\r\n            <h2 className=\"emailbottom\">선호 컨텐츠</h2>\r\n\r\n            {editing ? (\r\n              <>\r\n                <Input\r\n                  onChange={onChange}\r\n                  name=\"preference1\"\r\n                  value={preference1}\r\n                />\r\n                <Input\r\n                  onChange={onChange}\r\n                  name=\"preference2\"\r\n                  value={preference2}\r\n                />\r\n                <Input\r\n                  onChange={onChange}\r\n                  name=\"preference3\"\r\n                  value={preference3}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                선호1: {preference1} 선호2: {preference2} 선호3: {preference3}\r\n              </>\r\n            )}\r\n\r\n            {/* <div className=\"site-card-wrapper\"> */}\r\n            {/* <Row gutter={16}>\r\n                <Col span={8}>\r\n                  <Card\r\n                    className=\"carddetail\"\r\n                    title={'1:' + preference1}\r\n                    style={{ width: '100%', height: 200 }}\r\n                  >\r\n                    <img src=\"\" alt=\"픽토그램\" />\r\n                  </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Card\r\n                    className=\"carddetail\"\r\n                    title={'2:' + preference2}\r\n                    style={{ width: '100%', height: 200 }}\r\n                  >\r\n                    <img src=\"\" alt=\"픽토그램\" />\r\n                  </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <Card\r\n                    className=\"carddetail last_card\"\r\n                    title={'3:' + preference3}\r\n                    style={{ width: '100%', height: 200 }}\r\n                  >\r\n                    <img src=\"\" alt=\"픽토그램\" />\r\n                  </Card>\r\n                </Col>\r\n              </Row> */}\r\n            {/* </div> */}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <LoginPage />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Myprofile;\r\n","import ListCard from 'components/ListCard';\r\n\r\nconst Category = ({ match }) => {\r\n  //어쩌고\r\n\r\n  const { category } = match.params;\r\n\r\n  return (\r\n    <>\r\n      <ListCard getApi={'/api/board/search/' + category} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import { Input } from 'antd';\r\nimport ListCard from 'components/ListCard';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SearchPost = () => {\r\n  const { Search } = Input;\r\n  const [keyword, setKeyword] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [loading, setLoading] = useState('');\r\n\r\n  const highlightedText = (text, query) => {\r\n    if (query !== '' && text !== null && text.includes(query)) {\r\n      const parts = text.split(new RegExp(`(${query})`, 'gi'));\r\n\r\n      return (\r\n        <>\r\n          {parts.map((part, index) =>\r\n            part.toLowerCase() === query.toLowerCase() ? (\r\n              <span style={{ fontWeight: 'bold' }} key={index}>\r\n                {part}\r\n              </span>\r\n            ) : (\r\n              part\r\n            ),\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    return text;\r\n  }; //검색어 강조\r\n\r\n  const onSearch = value => {\r\n    setKeyword(value);\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      await axios.get(`/api/board/search/${keyword}?page=${page}`).then(res => {\r\n        setData(res.data.content);\r\n        console.log(res);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <div>\r\n      <h1> 검색하기 </h1>\r\n      <Search placeholder=\"input search text\" onSearch={onSearch} enterButton />\r\n\r\n      {data.map(list => (\r\n        <div>\r\n          <Link to={`/post/${list.id}`}>\r\n            <ul style={{ cursor: 'pointer', color: 'black' }}>\r\n              <li>{highlightedText(list.title, keyword)}</li>\r\n              <li>{highlightedText(list.writer, keyword)}</li>\r\n              <li>{highlightedText(list.event, keyword)}</li>\r\n              <li>{highlightedText(list.region1Depth, keyword)}</li>\r\n              <li>{highlightedText(list.region2Depth, keyword)}</li>\r\n              <li>{highlightedText(list.placeName, keyword)}</li>\r\n            </ul>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPost;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './WritePost';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Popconfirm,\r\n  PageHeader,\r\n  Radio,\r\n  Space,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport LocalSeraching from 'components/LocalSearching';\r\nimport 'routes/WritePost.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst UpdatePost = ({ history, match }) => {\r\n  //글쓰기 페이지+불러온 데이터.\r\n\r\n  //변수 이름때문에 보류하겠습니다.\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const { idx } = match.params;\r\n\r\n  const [post, setPost] = useState({\r\n    addressName: '',\r\n    content: '',\r\n    event: '',\r\n    eventTime: '',\r\n    locationX: '',\r\n    locationY: '',\r\n    needPeopleNum: '',\r\n    placeName: '',\r\n    region1Depth: '',\r\n    region2Depth: '',\r\n    title: '',\r\n  }); //포스트\r\n\r\n  const getData = async () => {\r\n    try {\r\n      await axios.get(`/api/board/posts/${idx}`).then(res => {\r\n        // setPost(res.data);\r\n        form.setFieldsValue({\r\n          title: res.data.title,\r\n          content: res.data.content,\r\n          needPeople: res.data.needPeopleNum,\r\n          event: res.data.event,\r\n          address: res.data.addressName,\r\n        });\r\n        console.log(res.data);\r\n        setPost(res.data);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  //글을 불러온다\r\n\r\n  //   const [visible, setVisible] = useState(false);\r\n\r\n  //   const [inputLocation, setInputLocation] = useState(null);\r\n\r\n  const { title, content } = post; //구조분해할당\r\n\r\n  //------------------------onChange등등\r\n\r\n  const onsubmitForm = async () => {\r\n    console.log(post);\r\n    await Swal.fire({\r\n      title: '수정하시겠습니까?',\r\n      showCancelButton: true,\r\n      confirmButtonText: '수정',\r\n      cancelButtonText: '취소',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        axios.put(`/api/board/posts/${idx}`, post).then(() => {\r\n          Swal.fire('수정 완료!', '', 'success');\r\n          history.push(`/post/${idx}`);\r\n        });\r\n      }\r\n    });\r\n  }; //전송하고 홈으로~\r\n\r\n  // const onChangeDate = (value, dateString) => {\r\n  //   console.log(dateString);\r\n  //   const nextPost = {\r\n  //     ...post,\r\n  //     eventTime: dateString,\r\n  //   };\r\n  //   setPost(nextPost);\r\n  // }; //date picker\r\n\r\n  const onChange = e => {\r\n    const nextPost = {\r\n      ...post,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setPost(nextPost);\r\n  }; //제목과 내용\r\n\r\n  const onChangeNumber = value => {\r\n    console.log(value);\r\n    const nextPost = {\r\n      ...post,\r\n      needPeopleNum: value,\r\n    };\r\n    setPost(nextPost);\r\n  }; //인원수\r\n\r\n  //   const onChangeEvent = value => {\r\n  //     const nextPost = {\r\n  //       ...post,\r\n  //       event: value.value,\r\n  //     };\r\n  //     setPost(nextPost);\r\n  //   }; //종목\r\n\r\n  //--------------------충격! 어쩌다 이렇게 비효율적인 코드가....... (하지만머리가안돌아감)\r\n\r\n  //--------------------위치 관련-------------------------\r\n\r\n  //   const myLocation = () => {\r\n  //     //클릭하면 나의 위치를 넘김\r\n\r\n  //     // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\r\n  //     if (navigator.geolocation) {\r\n  //       // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n  //       navigator.geolocation.getCurrentPosition(function(position) {\r\n  //         var lat = position.coords.latitude; //위도 (y)\r\n  //         var lng = position.coords.longitude; //경도 (x)\r\n\r\n  //         getAddress(lat, lng);\r\n  //       });\r\n  //     } else {\r\n  //       Swal.fire({\r\n  //         icon: 'error',\r\n  //         title: 'Oops...',\r\n  //         text: '현재 위치를 불러올 수 없습니다!',\r\n  //       });\r\n  //     } //접속 위치가 얻어지지 않으면\r\n  //   };\r\n\r\n  //   const getAddress = async (lat, lng) => {\r\n  //     const REST_API_KEY = 'b848a4ccc1802d07fa250ac646972888';\r\n\r\n  //     await axios({\r\n  //       method: 'get',\r\n  //       url: 'https://dapi.kakao.com//v2/local/geo/coord2address',\r\n  //       headers: { Authorization: 'KakaoAK ' + REST_API_KEY },\r\n  //       params: {\r\n  //         x: lng,\r\n  //         y: lat,\r\n  //       },\r\n  //     }).then(res => {\r\n  //       const myAddress = res.data.documents[0].address;\r\n\r\n  //       const {\r\n  //         address_name,\r\n  //         region_1depth_name,\r\n  //         region_2depth_name,\r\n  //       } = myAddress; //구조분해할당\r\n\r\n  //       Swal.fire({\r\n  //         title: '이 위치를 등록할까요?',\r\n  //         text: address_name,\r\n  //         showCancelButton: true,\r\n  //         confirmButtonText: '등록',\r\n  //         cancelButtonText: '취소',\r\n  //       }).then(result => {\r\n  //         if (result.isConfirmed) {\r\n  //           const nextPost = {\r\n  //             ...post,\r\n  //             locationX: lng,\r\n  //             locationY: lat,\r\n  //             placeName: '사용자 위치',\r\n  //             region1Depth: region_1depth_name, //시도 단위\r\n  //             region2Depth: region_2depth_name, //구 단위\r\n  //             addressName: address_name,\r\n  //           };\r\n  //           setPost(nextPost);\r\n  //           setInputLocation(address_name);\r\n  //           console.log(inputLocation);\r\n  //           setVisible(false);\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   };\r\n\r\n  //키워드 검색--------------------------------------------------------------------\r\n\r\n  //   const keywordLocation = () => {\r\n  //     setVisible(!visible);\r\n  //   }; //컴포넌트 토글 버튼\r\n\r\n  //   const saveKeywordAddress = item => {\r\n  //     const { place_name, address_name, x, y } = item;\r\n\r\n  //     Swal.fire({\r\n  //       title: '이 위치를 등록할까요?',\r\n  //       text: address_name,\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: '등록',\r\n  //       cancelButtonText: '취소',\r\n  //     }).then(result => {\r\n  //       if (result.isConfirmed) {\r\n  //         const nextPost = {\r\n  //           ...post,\r\n  //           locationX: x,\r\n  //           locationY: y,\r\n  //           placeName: place_name,\r\n  //           region1Depth: address_name.split(' ')[0], //시도 단위\r\n  //           region2Depth: address_name.split(' ')[1], //구 단위 .........풀 주소만 지원하는 관계로 단어로 자름 ~_~ ..\r\n  //           addressName: address_name,\r\n  //         };\r\n  //         setPost(nextPost);\r\n  //         setInputLocation(address_name);\r\n  //         setVisible(false);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   useEffect(() => {}, [visible]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  //-----------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"writePost\">\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        onBack={() => history.goBack()}\r\n        title=\"게시글 수정\"\r\n        subTitle=\"모집글을 수정합니다.\"\r\n      />\r\n      <div className=\"postForm\" style={{ padding: '20px' }}>\r\n        <Form\r\n          name=\"update\"\r\n          layout=\"horizontal\"\r\n          onFinish={onsubmitForm}\r\n          size=\"large\"\r\n          form={form}\r\n        >\r\n          <Form.Item\r\n            rules={[{ required: true, message: '제목을 입력하세요' }]}\r\n            name=\"title\"\r\n          >\r\n            <Input\r\n              placeholder=\"제목\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              maxLength=\"50\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '종목을 고르세요' }]}\r\n            name=\"event\"\r\n          >\r\n            <Input disabled placeholder=\"종목\" name=\"evnet\" />\r\n          </Form.Item>\r\n          {/* <Form.Item>\r\n            {/* <Radio.Group size=\"large\">\r\n              <Space size=\"middle\">\r\n                <Radio.Button value=\"a\" onClick={() => setInputLocation('')}>\r\n                  미지정\r\n                </Radio.Button>\r\n                <Radio.Button value=\"b\" onClick={myLocation}>\r\n                  내 위치\r\n                </Radio.Button>\r\n                <Radio.Button value=\"c\" onClick={keywordLocation}>\r\n                  키워드로 검색\r\n                </Radio.Button>\r\n              </Space>\r\n            </Radio.Group> */}\r\n\r\n          {/* {visible && ( */}\r\n          {/* //       <LocalSeraching saveKeywordAddress={saveKeywordAddress} />\r\n        //     )}\r\n        //   </Form.Item> */}\r\n          <Form.Item name=\"address\">\r\n            <Input disabled placeholder=\"위치\" name=\"address\" />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            name=\"date-picker\"\r\n            rules={[\r\n              {\r\n                type: 'object',\r\n                required: true,\r\n                message: '날짜와 시간을 입력하세요',\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker\r\n              showTime\r\n              format=\"YYYY-MM-DD HH:mm\"\r\n              onChange={onChangeDate}\r\n            />\r\n          </Form.Item> */}\r\n\r\n          <Form.Item\r\n            name=\"needPeople\"\r\n            rules={[{ required: true, message: '1 이상의 수를 입력하세요' }]}\r\n          >\r\n            <InputNumber\r\n              name=\"Number\"\r\n              min={1}\r\n              placeholder=\"인원수\"\r\n              onChange={onChangeNumber}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '소개글을 입력하세요' }]}\r\n            name=\"content\"\r\n          >\r\n            <Input.TextArea\r\n              placeholder=\"소개글\"\r\n              name=\"content\"\r\n              value={content}\r\n              onChange={onChange}\r\n              maxLength=\"500\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginTop: '25px' }}\r\n              htmlType=\"submit\"\r\n            >\r\n              등록\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePost;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport Contents from 'routes/Contents';\r\nimport Home from 'routes/Home';\r\nimport LoginPage from 'routes/LoginPage';\r\nimport ScrollToTop from './ScrollToTop';\r\nimport Messages from 'routes/Messages';\r\nimport WritePost from 'routes/WritePost';\r\nimport Post from 'routes/Post';\r\nimport Myprofile from 'routes/Myprofile';\r\nimport Category from 'routes/Category';\r\nimport SearchPost from 'routes/SearchPost';\r\nimport UpdatePost from 'routes/UpdataPost';\r\nimport userProfile from 'routes/UserProfile';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <>\r\n      <ScrollToTop />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route exact path=\"/contents\" component={Contents} />\r\n        <Route exact path=\"/loginpage\" component={LoginPage} />\r\n        <Route exact path=\"/writepost\" component={WritePost} />\r\n        <Route exact path=\"/messages\" component={Messages} />\r\n        <Route exact path=\"/myprofile/:email\" component={Myprofile} />\r\n        <Route exact path=\"/myprofile\" component={LoginPage} />\r\n        <Route exact path=\"/userprofile/:email\" component={userProfile} />\r\n        <Route exact path=\"/post/:idx\" component={Post} />\r\n        <Route exact path=\"/category/:category\" component={Category} />\r\n        <Route exact path=\"/searchpost\" component={SearchPost} />\r\n        <Route exact path=\"/update/:idx\" component={UpdatePost} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { Layout as AntLayout } from 'antd';\r\nimport { useRecoilState } from 'recoil';\r\nimport { layoutState } from 'state';\r\nimport 'components/LayoutComponents/Layout.css';\r\n\r\nconst Footer = () => {\r\n  const { Footer } = AntLayout;\r\n\r\n  const [layoutVisible, setLayoutVisible] = useRecoilState(layoutState);\r\n  //layoutVisible이 true일 때만 출력\r\n\r\n  return (\r\n    <>\r\n      {layoutVisible && (\r\n        <Footer>\r\n          <div className=\"footerText\">\r\n            &copy;403 Forbidden\r\n            <div>\r\n              Icons made by{' '}\r\n              <a href=\"https://www.freepik.com\" title=\"\">\r\n                freepik{' '}\r\n              </a>\r\n              from{' '}\r\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                www.flaticon.com\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </Footer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Layout as AntLayout, BackTop } from 'antd';\r\nimport { ArrowUpOutlined } from '@ant-design/icons';\r\nimport LayoutHeader from 'components/LayoutComponents/LayoutHeader';\r\nimport MobileMenu from 'components/LayoutComponents/MobileMenu';\r\nimport AppRouter from 'components/Router';\r\nimport LayoutFooter from 'components/LayoutComponents/LayoutFooter';\r\nimport 'components/LayoutComponents/Layout.css';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useRecoilState } from 'recoil';\r\nimport { layoutState, loginState } from 'state';\r\n\r\nconst Layout = ({}) => {\r\n  const { Content } = AntLayout;\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const getEmail = async () => {\r\n    await axios\r\n      .get(\r\n        'http://ec2-54-180-175-20.ap-northeast-2.compute.amazonaws.com:8080/api/loginedUser',\r\n      )\r\n      .then(res => {\r\n        console.log(res);\r\n        setEmail(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmail();\r\n  }, []);\r\n\r\n  const style = {\r\n    height: 40,\r\n    width: 40,\r\n    lineHeight: '40px',\r\n    borderRadius: 20,\r\n    backgroundColor: '#5cdbd3',\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n    bottom: '80px',\r\n    position: 'fixed',\r\n  };\r\n\r\n  return (\r\n    <AntLayout className=\"layout\">\r\n      <LayoutHeader email={email} />\r\n\r\n      <MobileMenu email={email} />\r\n      <Content>\r\n        <AppRouter />\r\n        <BackTop>\r\n          <div style={style}>\r\n            <ArrowUpOutlined />\r\n          </div>\r\n        </BackTop>{' '}\r\n        {/*앵커*/}\r\n      </Content>\r\n\r\n      <LayoutFooter />\r\n    </AntLayout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import 'antd/dist/antd.css';\r\nimport 'App.less';\r\nimport Layout from 'components/LayoutComponents/Layout';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Layout />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nReactDOM.render(\r\n  <RecoilRoot>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </RecoilRoot>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}